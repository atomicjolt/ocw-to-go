{
  "version": 3,
  "sources": ["../node_modules/workbox-core/_version.js", "../node_modules/workbox-core/models/messages/messages.js", "../node_modules/workbox-core/models/messages/messageGenerator.js", "../node_modules/workbox-core/_private/WorkboxError.js", "../node_modules/workbox-core/_private/assert.js", "../node_modules/workbox-core/_private/logger.js", "../node_modules/workbox-range-requests/_version.js", "../node_modules/workbox-range-requests/utils/calculateEffectiveBoundaries.js", "../node_modules/workbox-range-requests/utils/parseRangeHeader.js", "../node_modules/workbox-range-requests/createPartialResponse.js", "../src/worker.ts"],
  "sourcesContent": ["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:7.0.0'] && _();\n}\ncatch (e) { }\n", "/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n", "/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n", "/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n", "/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n", "/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in globalThis)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n", "\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:range-requests:7.0.0'] && _();\n}\ncatch (e) { }\n", "/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {Blob} blob A source blob.\n * @param {number} [start] The offset to use as the start of the\n * slice.\n * @param {number} [end] The offset to use as the end of the slice.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the effective boundaries to use given the size of the blob.\n *\n * @private\n */\nfunction calculateEffectiveBoundaries(blob, start, end) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(blob, Blob, {\n            moduleName: 'workbox-range-requests',\n            funcName: 'calculateEffectiveBoundaries',\n            paramName: 'blob',\n        });\n    }\n    const blobSize = blob.size;\n    if ((end && end > blobSize) || (start && start < 0)) {\n        throw new WorkboxError('range-not-satisfiable', {\n            size: blobSize,\n            end,\n            start,\n        });\n    }\n    let effectiveStart;\n    let effectiveEnd;\n    if (start !== undefined && end !== undefined) {\n        effectiveStart = start;\n        // Range values are inclusive, so add 1 to the value.\n        effectiveEnd = end + 1;\n    }\n    else if (start !== undefined && end === undefined) {\n        effectiveStart = start;\n        effectiveEnd = blobSize;\n    }\n    else if (end !== undefined && start === undefined) {\n        effectiveStart = blobSize - end;\n        effectiveEnd = blobSize;\n    }\n    return {\n        start: effectiveStart,\n        end: effectiveEnd,\n    };\n}\nexport { calculateEffectiveBoundaries };\n", "/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {string} rangeHeader A Range: header value.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the parsed value of the Range: header. If either the `start` or `end` are\n * omitted, then `null` will be returned.\n *\n * @private\n */\nfunction parseRangeHeader(rangeHeader) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(rangeHeader, 'string', {\n            moduleName: 'workbox-range-requests',\n            funcName: 'parseRangeHeader',\n            paramName: 'rangeHeader',\n        });\n    }\n    const normalizedRangeHeader = rangeHeader.trim().toLowerCase();\n    if (!normalizedRangeHeader.startsWith('bytes=')) {\n        throw new WorkboxError('unit-must-be-bytes', { normalizedRangeHeader });\n    }\n    // Specifying multiple ranges separate by commas is valid syntax, but this\n    // library only attempts to handle a single, contiguous sequence of bytes.\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range#Syntax\n    if (normalizedRangeHeader.includes(',')) {\n        throw new WorkboxError('single-range-only', { normalizedRangeHeader });\n    }\n    const rangeParts = /(\\d*)-(\\d*)/.exec(normalizedRangeHeader);\n    // We need either at least one of the start or end values.\n    if (!rangeParts || !(rangeParts[1] || rangeParts[2])) {\n        throw new WorkboxError('invalid-range-values', { normalizedRangeHeader });\n    }\n    return {\n        start: rangeParts[1] === '' ? undefined : Number(rangeParts[1]),\n        end: rangeParts[2] === '' ? undefined : Number(rangeParts[2]),\n    };\n}\nexport { parseRangeHeader };\n", "/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { calculateEffectiveBoundaries } from './utils/calculateEffectiveBoundaries.js';\nimport { parseRangeHeader } from './utils/parseRangeHeader.js';\nimport './_version.js';\n/**\n * Given a `Request` and `Response` objects as input, this will return a\n * promise for a new `Response`.\n *\n * If the original `Response` already contains partial content (i.e. it has\n * a status of 206), then this assumes it already fulfills the `Range:`\n * requirements, and will return it as-is.\n *\n * @param {Request} request A request, which should contain a Range:\n * header.\n * @param {Response} originalResponse A response.\n * @return {Promise<Response>} Either a `206 Partial Content` response, with\n * the response body set to the slice of content specified by the request's\n * `Range:` header, or a `416 Range Not Satisfiable` response if the\n * conditions of the `Range:` header can't be met.\n *\n * @memberof workbox-range-requests\n */\nasync function createPartialResponse(request, originalResponse) {\n    try {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'request',\n            });\n            assert.isInstance(originalResponse, Response, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'originalResponse',\n            });\n        }\n        if (originalResponse.status === 206) {\n            // If we already have a 206, then just pass it through as-is;\n            // see https://github.com/GoogleChrome/workbox/issues/1720\n            return originalResponse;\n        }\n        const rangeHeader = request.headers.get('range');\n        if (!rangeHeader) {\n            throw new WorkboxError('no-range-header');\n        }\n        const boundaries = parseRangeHeader(rangeHeader);\n        const originalBlob = await originalResponse.blob();\n        const effectiveBoundaries = calculateEffectiveBoundaries(originalBlob, boundaries.start, boundaries.end);\n        const slicedBlob = originalBlob.slice(effectiveBoundaries.start, effectiveBoundaries.end);\n        const slicedBlobSize = slicedBlob.size;\n        const slicedResponse = new Response(slicedBlob, {\n            // Status code 206 is for a Partial Content response.\n            // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206\n            status: 206,\n            statusText: 'Partial Content',\n            headers: originalResponse.headers,\n        });\n        slicedResponse.headers.set('Content-Length', String(slicedBlobSize));\n        slicedResponse.headers.set('Content-Range', `bytes ${effectiveBoundaries.start}-${effectiveBoundaries.end - 1}/` +\n            `${originalBlob.size}`);\n        return slicedResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.warn(`Unable to construct a partial response; returning a ` +\n                `416 Range Not Satisfiable response instead.`);\n            logger.groupCollapsed(`View details here.`);\n            logger.log(error);\n            logger.log(request);\n            logger.log(originalResponse);\n            logger.groupEnd();\n        }\n        return new Response('', {\n            status: 416,\n            statusText: 'Range Not Satisfiable',\n        });\n    }\n}\nexport { createPartialResponse };\n", "import { createPartialResponse } from 'workbox-range-requests';\nimport { Course } from './types';\nimport { eachOfLimit } from 'async';\n\nexport type {};\ndeclare const self: ServiceWorkerGlobalScope;\n\nconsole.log(\"The Worker Ran\");\n\nconst ASSETS_TO_CACHE = [\n  '/',\n  '/index.html',\n  '/favicon.ico',\n  '/styles/pico.min.css',\n  '/app.js',\n  '/course.js',\n  '/manifest.json',\n  '/icons/android/android-launchericon-192-192.png',\n  '/icons/android/android-launchericon-512-512.png',\n];\n\nself.addEventListener('install', event => {\n  console.log(\"The Worker Installed\", event);\n  event.waitUntil((async () => {\n    const cache = await caches.open(\"pwa-assets\");\n    await cache.addAll(ASSETS_TO_CACHE);\n  })()); \n  // Activate worker immediately\n  self.skipWaiting()\n});\n\nself.addEventListener('activate', event => {\n  console.log(\"The Worker Activated\", event);\n  \n  // Become available to all pages\n  event.waitUntil(self.clients.claim());\n});\n\nself.addEventListener('fetch', (event: FetchEvent) => {\n  // console.log(\"The Worker Fetched\", event.request.url);\n  event.respondWith(cacheFirst(event.request));\n});\n\naddEventListener('message', event => {\n  console.log(\"The Worker Received a Message\", event);\n  if (typeof event.data === 'object' && !Array.isArray(event.data) && event.data !== null) {\n    // if (event.data.type === 'downloadVideos') {\n    //   downloadVideos(event.data.course);\n    // }\n  }\n});\n\nasync function cacheFirst(request: Request) {\n  // return (await caches.match(request)) || await fetch(request);\n  return (await fileFromCache(request)) || await fetch(request);\n}\n\nasync function fileFromCache(request: Request): Promise<Response | undefined> {\n  // handle special file downloads\n  const url = new URL(request.url);\n  if (url && url.search.includes('forcedownload=true')) {\n    url.search = '';\n    const response = await caches.match(url);\n    if (response) {\n      const fileName = url.pathname.split('/').pop();\n      response.headers.set('Content-Disposition', `attachment; filename=\"${fileName}\"`);\n    }\n    return Promise.resolve(response);\n  }\n\n  // handle streaming video. Without this the video loads but you can't seek or fast forward\n  if (request.headers.has('range')) {\n    const fullResp = await caches.match(request.url);\n    if (fullResp) {\n      return Promise.resolve(createPartialResponse(request, fullResp));\n    }\n  }\n\n  const response = await caches.match(request);\n  return Promise.resolve(response);\n}\n\n// async function downloadVideos(course: Course) {\n//   const cache = await caches.open(`course-videos-${course.id}`);\n//   eachOfLimit(course.videos, 3, async(url) => {\n//     const response = await fetch(url);\n//     const videoBlob = await response.blob();\n//     const videoName = url.split('/').pop();\n//     await cache.put(`/courses/${course.id}/static_resources/${videoName}`, new Response(videoBlob, {headers: {'Content-Type': 'video/mp4'}}));\n//     postToClients({type: \"videoDownloaded\", courseId: course.id, url});\n//   });\n// }\n\nasync function postToClients(message: any) {\n  const clients = await self.clients.matchAll();\n  clients.forEach(client => client.postMessage(message));\n}\n"],
  "mappings": "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",
  "names": ["response"]
}
